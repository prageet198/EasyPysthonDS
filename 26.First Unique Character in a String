TITLE:-First Unique Character in a String
URL:-https://leetcode.com/problems/first-unique-character-in-a-string/

Question:-
Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.
Example 1:

Input: s = "leetcode"

Output: 0

Explanation:

The character 'l' at index 0 is the first character that does not occur at any other index.

Example 2:

Input: s = "loveleetcode"

Output: 2

Example 3:

Input: s = "aabb"

Output: -1

Solution:-
class Solution(object):
    def firstUniqChar(self, s):
        # Count occurrences of each character
        for char in s:
            if s.count(char) == 1:
                return s.index(char)
        return -1

# Example usage
solution = Solution()
print(solution.firstUniqChar("leetcode"))      # Output: 0
print(solution.firstUniqChar("loveleetcode"))   # Output: 2
print(solution.firstUniqChar("aabb"))          # Output: -1
