TITLE:-Word Pattern
URL:-https://leetcode.com/problems/word-pattern/

Question:-
Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s. Specifically:

Each letter in pattern maps to exactly one unique word in s.
Each unique word in s maps to exactly one letter in pattern.
No two letters map to the same word, and no two words map to the same letter.
 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"

Output: true

Explanation:

The bijection can be established as:

'a' maps to "dog".
'b' maps to "cat".
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"

Output: false

Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"

Output: false


Solution:-
class Solution(object):
    def wordPattern(self, pattern, s):
        words = s.split()
        
        # Check if the lengths match
        if len(pattern) != len(words):
            return False
        
        char_to_word = {}
        word_to_char = {}
        
        for char, word in zip(pattern, words):
            # Map characters to words
            if char not in char_to_word:
                char_to_word[char] = word
            # Map words to characters
            if word not in word_to_char:
                word_to_char[word] = char
            
            # Check for consistency in mappings
            if char_to_word[char] != word or word_to_char[word] != char:
                return False
        
        return True

# Example usage:
solution = Solution()
print(solution.wordPattern("abba", "dog cat cat dog"))  # Output: True
print(solution.wordPattern("abba", "dog cat cat fish"))  # Output: False
print(solution.wordPattern("aaaa", "dog cat cat dog"))   # Output: False

