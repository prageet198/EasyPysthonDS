TITLE:-Valid Parentheses
URL:-https://leetcode.com/problems/valid-parentheses/description/

Question:-
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 
Example 1:

Input: s = "()"

Output: true

Example 2:

Input: s = "()[]{}"

Output: true

Example 3:

Input: s = "(]"

Output: false

Example 4:

Input: s = "([])"

Output: true

Solution:-
class Solution(object):
    def isValid(self, s):
        pairs = {')': '(', '}': '{', ']': '['}
        stack = []

        for char in s:
            if char in pairs.values():  # Opening brackets
                stack.append(char)
            elif char in pairs.keys():  # Closing brackets
                if not stack or stack[-1] != pairs[char]:
                    return False  # Mismatch or stack is empty
                stack.pop()  # Match found, pop

        return not stack  # Return True if stack is empty

# Example usage:
solution = Solution()
print(solution.isValid("()"))        # Output: True
print(solution.isValid("()[]{}"))    # Output: True
print(solution.isValid("(]"))        # Output: False
print(solution.isValid("([])"))      # Output: True
